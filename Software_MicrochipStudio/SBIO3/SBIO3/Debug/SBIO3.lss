
SBIO3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003c  00800100  000007e0  00000874  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000007e0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000094  0080013c  0080013c  000008b0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000008b0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000090c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  00000948  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000e9f  00000000  00000000  000009c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ac5  00000000  00000000  0000185f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000535  00000000  00000000  00002324  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000f8  00000000  00000000  0000285c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000519  00000000  00000000  00002954  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002ac  00000000  00000000  00002e6d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  00003119  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
   8:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
   c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  10:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  14:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  18:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  1c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  20:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  24:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  28:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  2c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  30:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  34:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  38:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  3c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  40:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  44:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  48:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  4c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  50:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  54:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  58:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  5c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  60:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  64:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  68:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  6c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  70:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  74:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  78:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  7c:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  80:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  84:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>
  88:	0c 94 63 00 	jmp	0xc6	; 0xc6 <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e0 ee       	ldi	r30, 0xE0	; 224
  a0:	f7 e0       	ldi	r31, 0x07	; 7
  a2:	02 c0       	rjmp	.+4      	; 0xa8 <__do_copy_data+0x10>
  a4:	05 90       	lpm	r0, Z+
  a6:	0d 92       	st	X+, r0
  a8:	ac 33       	cpi	r26, 0x3C	; 60
  aa:	b1 07       	cpc	r27, r17
  ac:	d9 f7       	brne	.-10     	; 0xa4 <__do_copy_data+0xc>

000000ae <__do_clear_bss>:
  ae:	21 e0       	ldi	r18, 0x01	; 1
  b0:	ac e3       	ldi	r26, 0x3C	; 60
  b2:	b1 e0       	ldi	r27, 0x01	; 1
  b4:	01 c0       	rjmp	.+2      	; 0xb8 <.do_clear_bss_start>

000000b6 <.do_clear_bss_loop>:
  b6:	1d 92       	st	X+, r1

000000b8 <.do_clear_bss_start>:
  b8:	a0 3d       	cpi	r26, 0xD0	; 208
  ba:	b2 07       	cpc	r27, r18
  bc:	e1 f7       	brne	.-8      	; 0xb6 <.do_clear_bss_loop>
  be:	0e 94 65 00 	call	0xca	; 0xca <main>
  c2:	0c 94 ee 03 	jmp	0x7dc	; 0x7dc <_exit>

000000c6 <__bad_interrupt>:
  c6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ca <main>:


int main (void)
{
	//Init_GPIO(&PWM);
    UART_Init(&UART0);
  ca:	8d e3       	ldi	r24, 0x3D	; 61
  cc:	91 e0       	ldi	r25, 0x01	; 1
  ce:	0e 94 8b 00 	call	0x116	; 0x116 <UART_Init>

    while(1)
    {

    	//uint8_t i = Get_Input(&Input1_Port, Input1);
		_DBG(ON)
  d2:	88 b3       	in	r24, 0x18	; 24
  d4:	84 60       	ori	r24, 0x04	; 4
  d6:	88 bb       	out	0x18, r24	; 24
		printf("Hallo");
  d8:	8e e0       	ldi	r24, 0x0E	; 14
  da:	91 e0       	ldi	r25, 0x01	; 1
  dc:	9f 93       	push	r25
  de:	8f 93       	push	r24
  e0:	0e 94 10 01 	call	0x220	; 0x220 <printf>

		UART_RX_Handler(&UART0);
  e4:	8d e3       	ldi	r24, 0x3D	; 61
  e6:	91 e0       	ldi	r25, 0x01	; 1
  e8:	0e 94 a3 00 	call	0x146	; 0x146 <UART_RX_Handler>
		RX_Taskhandler(&UART0);
  ec:	8d e3       	ldi	r24, 0x3D	; 61
  ee:	91 e0       	ldi	r25, 0x01	; 1
  f0:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <RX_Taskhandler>
  f4:	0f 90       	pop	r0
  f6:	0f 90       	pop	r0
  f8:	ec cf       	rjmp	.-40     	; 0xd2 <main+0x8>

000000fa <UART_TX>:
	
	sei();
}

static int UART_TX(char c, FILE *stream)
{
  fa:	cf 93       	push	r28
  fc:	c8 2f       	mov	r28, r24
	if (c == '\n') UART_TX('\r', stream);
  fe:	8a 30       	cpi	r24, 0x0A	; 10
 100:	19 f4       	brne	.+6      	; 0x108 <UART_TX+0xe>
 102:	8d e0       	ldi	r24, 0x0D	; 13
 104:	0e 94 7d 00 	call	0xfa	; 0xfa <UART_TX>
	
	loop_until_bit_is_set(UCSR0A, UDRE0);
 108:	5d 9b       	sbis	0x0b, 5	; 11
 10a:	fe cf       	rjmp	.-4      	; 0x108 <UART_TX+0xe>
	UDR0 = c;
 10c:	cc b9       	out	0x0c, r28	; 12

	return 0;
} 
 10e:	80 e0       	ldi	r24, 0x00	; 0
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	cf 91       	pop	r28
 114:	08 95       	ret

00000116 <UART_Init>:

void UART_Init(UART *UART)
{

	//RXD-PIN als Eingang
	DDRD &= ~(1<<0);
 116:	21 b3       	in	r18, 0x11	; 17
 118:	2e 7f       	andi	r18, 0xFE	; 254
 11a:	21 bb       	out	0x11, r18	; 17

	//USART Baud rate: 9600
	UBRR0H = MYUBRR >> 8;
 11c:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7f0090>
	UBRR0L = MYUBRR;
 120:	23 e3       	ldi	r18, 0x33	; 51
 122:	29 b9       	out	0x09, r18	; 9
	UCSR0B = (1<<RXEN0) | (1<<TXEN0) | (1<<RXCIE0);
 124:	28 e9       	ldi	r18, 0x98	; 152
 126:	2a b9       	out	0x0a, r18	; 10
	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);
 128:	26 e0       	ldi	r18, 0x06	; 6
 12a:	20 93 95 00 	sts	0x0095, r18	; 0x800095 <__TEXT_REGION_LENGTH__+0x7f0095>
	
	//Wichtig für printf
	stdout = &mystdout;
 12e:	20 e0       	ldi	r18, 0x00	; 0
 130:	31 e0       	ldi	r19, 0x01	; 1
 132:	30 93 cd 01 	sts	0x01CD, r19	; 0x8001cd <__iob+0x3>
 136:	20 93 cc 01 	sts	0x01CC, r18	; 0x8001cc <__iob+0x2>
	
	UART->RX_Complete = 0;
 13a:	80 58       	subi	r24, 0x80	; 128
 13c:	9f 4f       	sbci	r25, 0xFF	; 255
 13e:	fc 01       	movw	r30, r24
 140:	10 82       	st	Z, r1
	
	sei();
 142:	78 94       	sei
 144:	08 95       	ret

00000146 <UART_RX_Handler>:
#include <string.h>
#include "UART_Routine.h"


void UART_RX_Handler(UART *UART0)
{
 146:	cf 93       	push	r28
 148:	df 93       	push	r29
	if (UART0->RX_Complete)
 14a:	fc 01       	movw	r30, r24
 14c:	e0 58       	subi	r30, 0x80	; 128
 14e:	ff 4f       	sbci	r31, 0xFF	; 255
 150:	20 81       	ld	r18, Z
 152:	22 23       	and	r18, r18
 154:	19 f1       	breq	.+70     	; 0x19c <UART_RX_Handler+0x56>
 156:	ec 01       	movw	r28, r24
	{
		if (strncmp(UART0->RX_Buf, "{TASK1}", UART0->RX_Global_Counter) == 0) UART0->RX_Task[TASK1] = 1;
 158:	31 96       	adiw	r30, 0x01	; 1
 15a:	40 81       	ld	r20, Z
 15c:	50 e0       	ldi	r21, 0x00	; 0
 15e:	64 e1       	ldi	r22, 0x14	; 20
 160:	71 e0       	ldi	r23, 0x01	; 1
 162:	0e 94 02 01 	call	0x204	; 0x204 <strncmp>
 166:	89 2b       	or	r24, r25
 168:	29 f4       	brne	.+10     	; 0x174 <UART_RX_Handler+0x2e>
 16a:	81 e0       	ldi	r24, 0x01	; 1
 16c:	fe 01       	movw	r30, r28
 16e:	ed 57       	subi	r30, 0x7D	; 125
 170:	ff 4f       	sbci	r31, 0xFF	; 255
 172:	80 83       	st	Z, r24
		if (strncmp(UART0->RX_Buf, "{TASK2}", UART0->RX_Global_Counter) == 0) UART0->RX_Task[TASK2] = 1;
 174:	fe 01       	movw	r30, r28
 176:	ef 57       	subi	r30, 0x7F	; 127
 178:	ff 4f       	sbci	r31, 0xFF	; 255
 17a:	40 81       	ld	r20, Z
 17c:	50 e0       	ldi	r21, 0x00	; 0
 17e:	6c e1       	ldi	r22, 0x1C	; 28
 180:	71 e0       	ldi	r23, 0x01	; 1
 182:	ce 01       	movw	r24, r28
 184:	0e 94 02 01 	call	0x204	; 0x204 <strncmp>
 188:	89 2b       	or	r24, r25
 18a:	29 f4       	brne	.+10     	; 0x196 <UART_RX_Handler+0x50>
 18c:	81 e0       	ldi	r24, 0x01	; 1
 18e:	fe 01       	movw	r30, r28
 190:	ec 57       	subi	r30, 0x7C	; 124
 192:	ff 4f       	sbci	r31, 0xFF	; 255
 194:	80 83       	st	Z, r24


		UART0->RX_Complete = 0;
 196:	c0 58       	subi	r28, 0x80	; 128
 198:	df 4f       	sbci	r29, 0xFF	; 255
 19a:	18 82       	st	Y, r1
	}
	
}
 19c:	df 91       	pop	r29
 19e:	cf 91       	pop	r28
 1a0:	08 95       	ret

000001a2 <RX_Taskhandler>:

void RX_Taskhandler(UART *UART0)
{
 1a2:	cf 93       	push	r28
 1a4:	df 93       	push	r29
 1a6:	ec 01       	movw	r28, r24
	do
	{
		/**************************************************
		*				    TASK 1						  *
		**************************************************/
		if (UART0->RX_Task[TASK1])
 1a8:	fe 01       	movw	r30, r28
 1aa:	ed 57       	subi	r30, 0x7D	; 125
 1ac:	ff 4f       	sbci	r31, 0xFF	; 255
 1ae:	80 81       	ld	r24, Z
 1b0:	88 23       	and	r24, r24
 1b2:	61 f0       	breq	.+24     	; 0x1cc <RX_Taskhandler+0x2a>
		{
			printf("Hallo TASK1");
 1b4:	84 e2       	ldi	r24, 0x24	; 36
 1b6:	91 e0       	ldi	r25, 0x01	; 1
 1b8:	9f 93       	push	r25
 1ba:	8f 93       	push	r24
 1bc:	0e 94 10 01 	call	0x220	; 0x220 <printf>
			UART0->RX_Task[TASK1] = 0;
 1c0:	cd 57       	subi	r28, 0x7D	; 125
 1c2:	df 4f       	sbci	r29, 0xFF	; 255
 1c4:	18 82       	st	Y, r1
			break;
 1c6:	0f 90       	pop	r0
 1c8:	0f 90       	pop	r0
 1ca:	19 c0       	rjmp	.+50     	; 0x1fe <RX_Taskhandler+0x5c>
		}
		/**************************************************
		*				    TASK 2						  *
		**************************************************/		
		if (UART0->RX_Task[TASK2])
 1cc:	fe 01       	movw	r30, r28
 1ce:	ec 57       	subi	r30, 0x7C	; 124
 1d0:	ff 4f       	sbci	r31, 0xFF	; 255
 1d2:	80 81       	ld	r24, Z
 1d4:	88 23       	and	r24, r24
 1d6:	61 f0       	breq	.+24     	; 0x1f0 <RX_Taskhandler+0x4e>
		{
			printf("Hallo TASK2");
 1d8:	80 e3       	ldi	r24, 0x30	; 48
 1da:	91 e0       	ldi	r25, 0x01	; 1
 1dc:	9f 93       	push	r25
 1de:	8f 93       	push	r24
 1e0:	0e 94 10 01 	call	0x220	; 0x220 <printf>
			UART0->RX_Task[TASK2] = 0;
 1e4:	cc 57       	subi	r28, 0x7C	; 124
 1e6:	df 4f       	sbci	r29, 0xFF	; 255
 1e8:	18 82       	st	Y, r1
			break;
 1ea:	0f 90       	pop	r0
 1ec:	0f 90       	pop	r0
 1ee:	07 c0       	rjmp	.+14     	; 0x1fe <RX_Taskhandler+0x5c>
		}
		counter++;
 1f0:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <__data_end>
 1f4:	8f 5f       	subi	r24, 0xFF	; 255
 1f6:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <__data_end>
		
	}
	while(counter <= (RX_Task_size - 1));
 1fa:	8a 30       	cpi	r24, 0x0A	; 10
 1fc:	a8 f2       	brcs	.-86     	; 0x1a8 <RX_Taskhandler+0x6>
}
 1fe:	df 91       	pop	r29
 200:	cf 91       	pop	r28
 202:	08 95       	ret

00000204 <strncmp>:
 204:	fb 01       	movw	r30, r22
 206:	dc 01       	movw	r26, r24
 208:	41 50       	subi	r20, 0x01	; 1
 20a:	50 40       	sbci	r21, 0x00	; 0
 20c:	30 f0       	brcs	.+12     	; 0x21a <strncmp+0x16>
 20e:	8d 91       	ld	r24, X+
 210:	01 90       	ld	r0, Z+
 212:	80 19       	sub	r24, r0
 214:	19 f4       	brne	.+6      	; 0x21c <strncmp+0x18>
 216:	00 20       	and	r0, r0
 218:	b9 f7       	brne	.-18     	; 0x208 <strncmp+0x4>
 21a:	88 1b       	sub	r24, r24
 21c:	99 0b       	sbc	r25, r25
 21e:	08 95       	ret

00000220 <printf>:
 220:	a0 e0       	ldi	r26, 0x00	; 0
 222:	b0 e0       	ldi	r27, 0x00	; 0
 224:	e6 e1       	ldi	r30, 0x16	; 22
 226:	f1 e0       	ldi	r31, 0x01	; 1
 228:	0c 94 c7 03 	jmp	0x78e	; 0x78e <__prologue_saves__+0x20>
 22c:	ae 01       	movw	r20, r28
 22e:	4b 5f       	subi	r20, 0xFB	; 251
 230:	5f 4f       	sbci	r21, 0xFF	; 255
 232:	fa 01       	movw	r30, r20
 234:	61 91       	ld	r22, Z+
 236:	71 91       	ld	r23, Z+
 238:	af 01       	movw	r20, r30
 23a:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <__iob+0x2>
 23e:	90 91 cd 01 	lds	r25, 0x01CD	; 0x8001cd <__iob+0x3>
 242:	0e 94 26 01 	call	0x24c	; 0x24c <vfprintf>
 246:	e2 e0       	ldi	r30, 0x02	; 2
 248:	0c 94 e3 03 	jmp	0x7c6	; 0x7c6 <__epilogue_restores__+0x20>

0000024c <vfprintf>:
 24c:	ab e0       	ldi	r26, 0x0B	; 11
 24e:	b0 e0       	ldi	r27, 0x00	; 0
 250:	ec e2       	ldi	r30, 0x2C	; 44
 252:	f1 e0       	ldi	r31, 0x01	; 1
 254:	0c 94 b7 03 	jmp	0x76e	; 0x76e <__prologue_saves__>
 258:	6c 01       	movw	r12, r24
 25a:	7b 01       	movw	r14, r22
 25c:	8a 01       	movw	r16, r20
 25e:	fc 01       	movw	r30, r24
 260:	17 82       	std	Z+7, r1	; 0x07
 262:	16 82       	std	Z+6, r1	; 0x06
 264:	83 81       	ldd	r24, Z+3	; 0x03
 266:	81 ff       	sbrs	r24, 1
 268:	cc c1       	rjmp	.+920    	; 0x602 <__LOCK_REGION_LENGTH__+0x202>
 26a:	ce 01       	movw	r24, r28
 26c:	01 96       	adiw	r24, 0x01	; 1
 26e:	3c 01       	movw	r6, r24
 270:	f6 01       	movw	r30, r12
 272:	93 81       	ldd	r25, Z+3	; 0x03
 274:	f7 01       	movw	r30, r14
 276:	93 fd       	sbrc	r25, 3
 278:	85 91       	lpm	r24, Z+
 27a:	93 ff       	sbrs	r25, 3
 27c:	81 91       	ld	r24, Z+
 27e:	7f 01       	movw	r14, r30
 280:	88 23       	and	r24, r24
 282:	09 f4       	brne	.+2      	; 0x286 <vfprintf+0x3a>
 284:	ba c1       	rjmp	.+884    	; 0x5fa <__LOCK_REGION_LENGTH__+0x1fa>
 286:	85 32       	cpi	r24, 0x25	; 37
 288:	39 f4       	brne	.+14     	; 0x298 <vfprintf+0x4c>
 28a:	93 fd       	sbrc	r25, 3
 28c:	85 91       	lpm	r24, Z+
 28e:	93 ff       	sbrs	r25, 3
 290:	81 91       	ld	r24, Z+
 292:	7f 01       	movw	r14, r30
 294:	85 32       	cpi	r24, 0x25	; 37
 296:	29 f4       	brne	.+10     	; 0x2a2 <vfprintf+0x56>
 298:	b6 01       	movw	r22, r12
 29a:	90 e0       	ldi	r25, 0x00	; 0
 29c:	0e 94 1d 03 	call	0x63a	; 0x63a <fputc>
 2a0:	e7 cf       	rjmp	.-50     	; 0x270 <vfprintf+0x24>
 2a2:	91 2c       	mov	r9, r1
 2a4:	21 2c       	mov	r2, r1
 2a6:	31 2c       	mov	r3, r1
 2a8:	ff e1       	ldi	r31, 0x1F	; 31
 2aa:	f3 15       	cp	r31, r3
 2ac:	d8 f0       	brcs	.+54     	; 0x2e4 <vfprintf+0x98>
 2ae:	8b 32       	cpi	r24, 0x2B	; 43
 2b0:	79 f0       	breq	.+30     	; 0x2d0 <vfprintf+0x84>
 2b2:	38 f4       	brcc	.+14     	; 0x2c2 <vfprintf+0x76>
 2b4:	80 32       	cpi	r24, 0x20	; 32
 2b6:	79 f0       	breq	.+30     	; 0x2d6 <vfprintf+0x8a>
 2b8:	83 32       	cpi	r24, 0x23	; 35
 2ba:	a1 f4       	brne	.+40     	; 0x2e4 <vfprintf+0x98>
 2bc:	23 2d       	mov	r18, r3
 2be:	20 61       	ori	r18, 0x10	; 16
 2c0:	1d c0       	rjmp	.+58     	; 0x2fc <vfprintf+0xb0>
 2c2:	8d 32       	cpi	r24, 0x2D	; 45
 2c4:	61 f0       	breq	.+24     	; 0x2de <vfprintf+0x92>
 2c6:	80 33       	cpi	r24, 0x30	; 48
 2c8:	69 f4       	brne	.+26     	; 0x2e4 <vfprintf+0x98>
 2ca:	23 2d       	mov	r18, r3
 2cc:	21 60       	ori	r18, 0x01	; 1
 2ce:	16 c0       	rjmp	.+44     	; 0x2fc <vfprintf+0xb0>
 2d0:	83 2d       	mov	r24, r3
 2d2:	82 60       	ori	r24, 0x02	; 2
 2d4:	38 2e       	mov	r3, r24
 2d6:	e3 2d       	mov	r30, r3
 2d8:	e4 60       	ori	r30, 0x04	; 4
 2da:	3e 2e       	mov	r3, r30
 2dc:	2a c0       	rjmp	.+84     	; 0x332 <vfprintf+0xe6>
 2de:	f3 2d       	mov	r31, r3
 2e0:	f8 60       	ori	r31, 0x08	; 8
 2e2:	1d c0       	rjmp	.+58     	; 0x31e <vfprintf+0xd2>
 2e4:	37 fc       	sbrc	r3, 7
 2e6:	2d c0       	rjmp	.+90     	; 0x342 <vfprintf+0xf6>
 2e8:	20 ed       	ldi	r18, 0xD0	; 208
 2ea:	28 0f       	add	r18, r24
 2ec:	2a 30       	cpi	r18, 0x0A	; 10
 2ee:	40 f0       	brcs	.+16     	; 0x300 <vfprintf+0xb4>
 2f0:	8e 32       	cpi	r24, 0x2E	; 46
 2f2:	b9 f4       	brne	.+46     	; 0x322 <vfprintf+0xd6>
 2f4:	36 fc       	sbrc	r3, 6
 2f6:	81 c1       	rjmp	.+770    	; 0x5fa <__LOCK_REGION_LENGTH__+0x1fa>
 2f8:	23 2d       	mov	r18, r3
 2fa:	20 64       	ori	r18, 0x40	; 64
 2fc:	32 2e       	mov	r3, r18
 2fe:	19 c0       	rjmp	.+50     	; 0x332 <vfprintf+0xe6>
 300:	36 fe       	sbrs	r3, 6
 302:	06 c0       	rjmp	.+12     	; 0x310 <vfprintf+0xc4>
 304:	8a e0       	ldi	r24, 0x0A	; 10
 306:	98 9e       	mul	r9, r24
 308:	20 0d       	add	r18, r0
 30a:	11 24       	eor	r1, r1
 30c:	92 2e       	mov	r9, r18
 30e:	11 c0       	rjmp	.+34     	; 0x332 <vfprintf+0xe6>
 310:	ea e0       	ldi	r30, 0x0A	; 10
 312:	2e 9e       	mul	r2, r30
 314:	20 0d       	add	r18, r0
 316:	11 24       	eor	r1, r1
 318:	22 2e       	mov	r2, r18
 31a:	f3 2d       	mov	r31, r3
 31c:	f0 62       	ori	r31, 0x20	; 32
 31e:	3f 2e       	mov	r3, r31
 320:	08 c0       	rjmp	.+16     	; 0x332 <vfprintf+0xe6>
 322:	8c 36       	cpi	r24, 0x6C	; 108
 324:	21 f4       	brne	.+8      	; 0x32e <vfprintf+0xe2>
 326:	83 2d       	mov	r24, r3
 328:	80 68       	ori	r24, 0x80	; 128
 32a:	38 2e       	mov	r3, r24
 32c:	02 c0       	rjmp	.+4      	; 0x332 <vfprintf+0xe6>
 32e:	88 36       	cpi	r24, 0x68	; 104
 330:	41 f4       	brne	.+16     	; 0x342 <vfprintf+0xf6>
 332:	f7 01       	movw	r30, r14
 334:	93 fd       	sbrc	r25, 3
 336:	85 91       	lpm	r24, Z+
 338:	93 ff       	sbrs	r25, 3
 33a:	81 91       	ld	r24, Z+
 33c:	7f 01       	movw	r14, r30
 33e:	81 11       	cpse	r24, r1
 340:	b3 cf       	rjmp	.-154    	; 0x2a8 <vfprintf+0x5c>
 342:	98 2f       	mov	r25, r24
 344:	9f 7d       	andi	r25, 0xDF	; 223
 346:	95 54       	subi	r25, 0x45	; 69
 348:	93 30       	cpi	r25, 0x03	; 3
 34a:	28 f4       	brcc	.+10     	; 0x356 <vfprintf+0x10a>
 34c:	0c 5f       	subi	r16, 0xFC	; 252
 34e:	1f 4f       	sbci	r17, 0xFF	; 255
 350:	9f e3       	ldi	r25, 0x3F	; 63
 352:	99 83       	std	Y+1, r25	; 0x01
 354:	0d c0       	rjmp	.+26     	; 0x370 <vfprintf+0x124>
 356:	83 36       	cpi	r24, 0x63	; 99
 358:	31 f0       	breq	.+12     	; 0x366 <vfprintf+0x11a>
 35a:	83 37       	cpi	r24, 0x73	; 115
 35c:	71 f0       	breq	.+28     	; 0x37a <vfprintf+0x12e>
 35e:	83 35       	cpi	r24, 0x53	; 83
 360:	09 f0       	breq	.+2      	; 0x364 <vfprintf+0x118>
 362:	59 c0       	rjmp	.+178    	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 364:	21 c0       	rjmp	.+66     	; 0x3a8 <vfprintf+0x15c>
 366:	f8 01       	movw	r30, r16
 368:	80 81       	ld	r24, Z
 36a:	89 83       	std	Y+1, r24	; 0x01
 36c:	0e 5f       	subi	r16, 0xFE	; 254
 36e:	1f 4f       	sbci	r17, 0xFF	; 255
 370:	88 24       	eor	r8, r8
 372:	83 94       	inc	r8
 374:	91 2c       	mov	r9, r1
 376:	53 01       	movw	r10, r6
 378:	13 c0       	rjmp	.+38     	; 0x3a0 <vfprintf+0x154>
 37a:	28 01       	movw	r4, r16
 37c:	f2 e0       	ldi	r31, 0x02	; 2
 37e:	4f 0e       	add	r4, r31
 380:	51 1c       	adc	r5, r1
 382:	f8 01       	movw	r30, r16
 384:	a0 80       	ld	r10, Z
 386:	b1 80       	ldd	r11, Z+1	; 0x01
 388:	36 fe       	sbrs	r3, 6
 38a:	03 c0       	rjmp	.+6      	; 0x392 <vfprintf+0x146>
 38c:	69 2d       	mov	r22, r9
 38e:	70 e0       	ldi	r23, 0x00	; 0
 390:	02 c0       	rjmp	.+4      	; 0x396 <vfprintf+0x14a>
 392:	6f ef       	ldi	r22, 0xFF	; 255
 394:	7f ef       	ldi	r23, 0xFF	; 255
 396:	c5 01       	movw	r24, r10
 398:	0e 94 12 03 	call	0x624	; 0x624 <strnlen>
 39c:	4c 01       	movw	r8, r24
 39e:	82 01       	movw	r16, r4
 3a0:	f3 2d       	mov	r31, r3
 3a2:	ff 77       	andi	r31, 0x7F	; 127
 3a4:	3f 2e       	mov	r3, r31
 3a6:	16 c0       	rjmp	.+44     	; 0x3d4 <vfprintf+0x188>
 3a8:	28 01       	movw	r4, r16
 3aa:	22 e0       	ldi	r18, 0x02	; 2
 3ac:	42 0e       	add	r4, r18
 3ae:	51 1c       	adc	r5, r1
 3b0:	f8 01       	movw	r30, r16
 3b2:	a0 80       	ld	r10, Z
 3b4:	b1 80       	ldd	r11, Z+1	; 0x01
 3b6:	36 fe       	sbrs	r3, 6
 3b8:	03 c0       	rjmp	.+6      	; 0x3c0 <vfprintf+0x174>
 3ba:	69 2d       	mov	r22, r9
 3bc:	70 e0       	ldi	r23, 0x00	; 0
 3be:	02 c0       	rjmp	.+4      	; 0x3c4 <vfprintf+0x178>
 3c0:	6f ef       	ldi	r22, 0xFF	; 255
 3c2:	7f ef       	ldi	r23, 0xFF	; 255
 3c4:	c5 01       	movw	r24, r10
 3c6:	0e 94 07 03 	call	0x60e	; 0x60e <strnlen_P>
 3ca:	4c 01       	movw	r8, r24
 3cc:	f3 2d       	mov	r31, r3
 3ce:	f0 68       	ori	r31, 0x80	; 128
 3d0:	3f 2e       	mov	r3, r31
 3d2:	82 01       	movw	r16, r4
 3d4:	33 fc       	sbrc	r3, 3
 3d6:	1b c0       	rjmp	.+54     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 3d8:	82 2d       	mov	r24, r2
 3da:	90 e0       	ldi	r25, 0x00	; 0
 3dc:	88 16       	cp	r8, r24
 3de:	99 06       	cpc	r9, r25
 3e0:	b0 f4       	brcc	.+44     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 3e2:	b6 01       	movw	r22, r12
 3e4:	80 e2       	ldi	r24, 0x20	; 32
 3e6:	90 e0       	ldi	r25, 0x00	; 0
 3e8:	0e 94 1d 03 	call	0x63a	; 0x63a <fputc>
 3ec:	2a 94       	dec	r2
 3ee:	f4 cf       	rjmp	.-24     	; 0x3d8 <vfprintf+0x18c>
 3f0:	f5 01       	movw	r30, r10
 3f2:	37 fc       	sbrc	r3, 7
 3f4:	85 91       	lpm	r24, Z+
 3f6:	37 fe       	sbrs	r3, 7
 3f8:	81 91       	ld	r24, Z+
 3fa:	5f 01       	movw	r10, r30
 3fc:	b6 01       	movw	r22, r12
 3fe:	90 e0       	ldi	r25, 0x00	; 0
 400:	0e 94 1d 03 	call	0x63a	; 0x63a <fputc>
 404:	21 10       	cpse	r2, r1
 406:	2a 94       	dec	r2
 408:	21 e0       	ldi	r18, 0x01	; 1
 40a:	82 1a       	sub	r8, r18
 40c:	91 08       	sbc	r9, r1
 40e:	81 14       	cp	r8, r1
 410:	91 04       	cpc	r9, r1
 412:	71 f7       	brne	.-36     	; 0x3f0 <vfprintf+0x1a4>
 414:	e8 c0       	rjmp	.+464    	; 0x5e6 <__LOCK_REGION_LENGTH__+0x1e6>
 416:	84 36       	cpi	r24, 0x64	; 100
 418:	11 f0       	breq	.+4      	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 41a:	89 36       	cpi	r24, 0x69	; 105
 41c:	41 f5       	brne	.+80     	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
 41e:	f8 01       	movw	r30, r16
 420:	37 fe       	sbrs	r3, 7
 422:	07 c0       	rjmp	.+14     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 424:	60 81       	ld	r22, Z
 426:	71 81       	ldd	r23, Z+1	; 0x01
 428:	82 81       	ldd	r24, Z+2	; 0x02
 42a:	93 81       	ldd	r25, Z+3	; 0x03
 42c:	0c 5f       	subi	r16, 0xFC	; 252
 42e:	1f 4f       	sbci	r17, 0xFF	; 255
 430:	08 c0       	rjmp	.+16     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 432:	60 81       	ld	r22, Z
 434:	71 81       	ldd	r23, Z+1	; 0x01
 436:	07 2e       	mov	r0, r23
 438:	00 0c       	add	r0, r0
 43a:	88 0b       	sbc	r24, r24
 43c:	99 0b       	sbc	r25, r25
 43e:	0e 5f       	subi	r16, 0xFE	; 254
 440:	1f 4f       	sbci	r17, 0xFF	; 255
 442:	f3 2d       	mov	r31, r3
 444:	ff 76       	andi	r31, 0x6F	; 111
 446:	3f 2e       	mov	r3, r31
 448:	97 ff       	sbrs	r25, 7
 44a:	09 c0       	rjmp	.+18     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 44c:	90 95       	com	r25
 44e:	80 95       	com	r24
 450:	70 95       	com	r23
 452:	61 95       	neg	r22
 454:	7f 4f       	sbci	r23, 0xFF	; 255
 456:	8f 4f       	sbci	r24, 0xFF	; 255
 458:	9f 4f       	sbci	r25, 0xFF	; 255
 45a:	f0 68       	ori	r31, 0x80	; 128
 45c:	3f 2e       	mov	r3, r31
 45e:	2a e0       	ldi	r18, 0x0A	; 10
 460:	30 e0       	ldi	r19, 0x00	; 0
 462:	a3 01       	movw	r20, r6
 464:	0e 94 59 03 	call	0x6b2	; 0x6b2 <__ultoa_invert>
 468:	88 2e       	mov	r8, r24
 46a:	86 18       	sub	r8, r6
 46c:	45 c0       	rjmp	.+138    	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
 46e:	85 37       	cpi	r24, 0x75	; 117
 470:	31 f4       	brne	.+12     	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
 472:	23 2d       	mov	r18, r3
 474:	2f 7e       	andi	r18, 0xEF	; 239
 476:	b2 2e       	mov	r11, r18
 478:	2a e0       	ldi	r18, 0x0A	; 10
 47a:	30 e0       	ldi	r19, 0x00	; 0
 47c:	25 c0       	rjmp	.+74     	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 47e:	93 2d       	mov	r25, r3
 480:	99 7f       	andi	r25, 0xF9	; 249
 482:	b9 2e       	mov	r11, r25
 484:	8f 36       	cpi	r24, 0x6F	; 111
 486:	c1 f0       	breq	.+48     	; 0x4b8 <__LOCK_REGION_LENGTH__+0xb8>
 488:	18 f4       	brcc	.+6      	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
 48a:	88 35       	cpi	r24, 0x58	; 88
 48c:	79 f0       	breq	.+30     	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
 48e:	b5 c0       	rjmp	.+362    	; 0x5fa <__LOCK_REGION_LENGTH__+0x1fa>
 490:	80 37       	cpi	r24, 0x70	; 112
 492:	19 f0       	breq	.+6      	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
 494:	88 37       	cpi	r24, 0x78	; 120
 496:	21 f0       	breq	.+8      	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
 498:	b0 c0       	rjmp	.+352    	; 0x5fa <__LOCK_REGION_LENGTH__+0x1fa>
 49a:	e9 2f       	mov	r30, r25
 49c:	e0 61       	ori	r30, 0x10	; 16
 49e:	be 2e       	mov	r11, r30
 4a0:	b4 fe       	sbrs	r11, 4
 4a2:	0d c0       	rjmp	.+26     	; 0x4be <__LOCK_REGION_LENGTH__+0xbe>
 4a4:	fb 2d       	mov	r31, r11
 4a6:	f4 60       	ori	r31, 0x04	; 4
 4a8:	bf 2e       	mov	r11, r31
 4aa:	09 c0       	rjmp	.+18     	; 0x4be <__LOCK_REGION_LENGTH__+0xbe>
 4ac:	34 fe       	sbrs	r3, 4
 4ae:	0a c0       	rjmp	.+20     	; 0x4c4 <__LOCK_REGION_LENGTH__+0xc4>
 4b0:	29 2f       	mov	r18, r25
 4b2:	26 60       	ori	r18, 0x06	; 6
 4b4:	b2 2e       	mov	r11, r18
 4b6:	06 c0       	rjmp	.+12     	; 0x4c4 <__LOCK_REGION_LENGTH__+0xc4>
 4b8:	28 e0       	ldi	r18, 0x08	; 8
 4ba:	30 e0       	ldi	r19, 0x00	; 0
 4bc:	05 c0       	rjmp	.+10     	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 4be:	20 e1       	ldi	r18, 0x10	; 16
 4c0:	30 e0       	ldi	r19, 0x00	; 0
 4c2:	02 c0       	rjmp	.+4      	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 4c4:	20 e1       	ldi	r18, 0x10	; 16
 4c6:	32 e0       	ldi	r19, 0x02	; 2
 4c8:	f8 01       	movw	r30, r16
 4ca:	b7 fe       	sbrs	r11, 7
 4cc:	07 c0       	rjmp	.+14     	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
 4ce:	60 81       	ld	r22, Z
 4d0:	71 81       	ldd	r23, Z+1	; 0x01
 4d2:	82 81       	ldd	r24, Z+2	; 0x02
 4d4:	93 81       	ldd	r25, Z+3	; 0x03
 4d6:	0c 5f       	subi	r16, 0xFC	; 252
 4d8:	1f 4f       	sbci	r17, 0xFF	; 255
 4da:	06 c0       	rjmp	.+12     	; 0x4e8 <__LOCK_REGION_LENGTH__+0xe8>
 4dc:	60 81       	ld	r22, Z
 4de:	71 81       	ldd	r23, Z+1	; 0x01
 4e0:	80 e0       	ldi	r24, 0x00	; 0
 4e2:	90 e0       	ldi	r25, 0x00	; 0
 4e4:	0e 5f       	subi	r16, 0xFE	; 254
 4e6:	1f 4f       	sbci	r17, 0xFF	; 255
 4e8:	a3 01       	movw	r20, r6
 4ea:	0e 94 59 03 	call	0x6b2	; 0x6b2 <__ultoa_invert>
 4ee:	88 2e       	mov	r8, r24
 4f0:	86 18       	sub	r8, r6
 4f2:	fb 2d       	mov	r31, r11
 4f4:	ff 77       	andi	r31, 0x7F	; 127
 4f6:	3f 2e       	mov	r3, r31
 4f8:	36 fe       	sbrs	r3, 6
 4fa:	0d c0       	rjmp	.+26     	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
 4fc:	23 2d       	mov	r18, r3
 4fe:	2e 7f       	andi	r18, 0xFE	; 254
 500:	a2 2e       	mov	r10, r18
 502:	89 14       	cp	r8, r9
 504:	58 f4       	brcc	.+22     	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
 506:	34 fe       	sbrs	r3, 4
 508:	0b c0       	rjmp	.+22     	; 0x520 <__LOCK_REGION_LENGTH__+0x120>
 50a:	32 fc       	sbrc	r3, 2
 50c:	09 c0       	rjmp	.+18     	; 0x520 <__LOCK_REGION_LENGTH__+0x120>
 50e:	83 2d       	mov	r24, r3
 510:	8e 7e       	andi	r24, 0xEE	; 238
 512:	a8 2e       	mov	r10, r24
 514:	05 c0       	rjmp	.+10     	; 0x520 <__LOCK_REGION_LENGTH__+0x120>
 516:	b8 2c       	mov	r11, r8
 518:	a3 2c       	mov	r10, r3
 51a:	03 c0       	rjmp	.+6      	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
 51c:	b8 2c       	mov	r11, r8
 51e:	01 c0       	rjmp	.+2      	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
 520:	b9 2c       	mov	r11, r9
 522:	a4 fe       	sbrs	r10, 4
 524:	0f c0       	rjmp	.+30     	; 0x544 <__LOCK_REGION_LENGTH__+0x144>
 526:	fe 01       	movw	r30, r28
 528:	e8 0d       	add	r30, r8
 52a:	f1 1d       	adc	r31, r1
 52c:	80 81       	ld	r24, Z
 52e:	80 33       	cpi	r24, 0x30	; 48
 530:	21 f4       	brne	.+8      	; 0x53a <__LOCK_REGION_LENGTH__+0x13a>
 532:	9a 2d       	mov	r25, r10
 534:	99 7e       	andi	r25, 0xE9	; 233
 536:	a9 2e       	mov	r10, r25
 538:	09 c0       	rjmp	.+18     	; 0x54c <__LOCK_REGION_LENGTH__+0x14c>
 53a:	a2 fe       	sbrs	r10, 2
 53c:	06 c0       	rjmp	.+12     	; 0x54a <__LOCK_REGION_LENGTH__+0x14a>
 53e:	b3 94       	inc	r11
 540:	b3 94       	inc	r11
 542:	04 c0       	rjmp	.+8      	; 0x54c <__LOCK_REGION_LENGTH__+0x14c>
 544:	8a 2d       	mov	r24, r10
 546:	86 78       	andi	r24, 0x86	; 134
 548:	09 f0       	breq	.+2      	; 0x54c <__LOCK_REGION_LENGTH__+0x14c>
 54a:	b3 94       	inc	r11
 54c:	a3 fc       	sbrc	r10, 3
 54e:	11 c0       	rjmp	.+34     	; 0x572 <__LOCK_REGION_LENGTH__+0x172>
 550:	a0 fe       	sbrs	r10, 0
 552:	06 c0       	rjmp	.+12     	; 0x560 <__LOCK_REGION_LENGTH__+0x160>
 554:	b2 14       	cp	r11, r2
 556:	88 f4       	brcc	.+34     	; 0x57a <__LOCK_REGION_LENGTH__+0x17a>
 558:	28 0c       	add	r2, r8
 55a:	92 2c       	mov	r9, r2
 55c:	9b 18       	sub	r9, r11
 55e:	0e c0       	rjmp	.+28     	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 560:	b2 14       	cp	r11, r2
 562:	60 f4       	brcc	.+24     	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 564:	b6 01       	movw	r22, r12
 566:	80 e2       	ldi	r24, 0x20	; 32
 568:	90 e0       	ldi	r25, 0x00	; 0
 56a:	0e 94 1d 03 	call	0x63a	; 0x63a <fputc>
 56e:	b3 94       	inc	r11
 570:	f7 cf       	rjmp	.-18     	; 0x560 <__LOCK_REGION_LENGTH__+0x160>
 572:	b2 14       	cp	r11, r2
 574:	18 f4       	brcc	.+6      	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 576:	2b 18       	sub	r2, r11
 578:	02 c0       	rjmp	.+4      	; 0x57e <__LOCK_REGION_LENGTH__+0x17e>
 57a:	98 2c       	mov	r9, r8
 57c:	21 2c       	mov	r2, r1
 57e:	a4 fe       	sbrs	r10, 4
 580:	10 c0       	rjmp	.+32     	; 0x5a2 <__LOCK_REGION_LENGTH__+0x1a2>
 582:	b6 01       	movw	r22, r12
 584:	80 e3       	ldi	r24, 0x30	; 48
 586:	90 e0       	ldi	r25, 0x00	; 0
 588:	0e 94 1d 03 	call	0x63a	; 0x63a <fputc>
 58c:	a2 fe       	sbrs	r10, 2
 58e:	17 c0       	rjmp	.+46     	; 0x5be <__LOCK_REGION_LENGTH__+0x1be>
 590:	a1 fc       	sbrc	r10, 1
 592:	03 c0       	rjmp	.+6      	; 0x59a <__LOCK_REGION_LENGTH__+0x19a>
 594:	88 e7       	ldi	r24, 0x78	; 120
 596:	90 e0       	ldi	r25, 0x00	; 0
 598:	02 c0       	rjmp	.+4      	; 0x59e <__LOCK_REGION_LENGTH__+0x19e>
 59a:	88 e5       	ldi	r24, 0x58	; 88
 59c:	90 e0       	ldi	r25, 0x00	; 0
 59e:	b6 01       	movw	r22, r12
 5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__LOCK_REGION_LENGTH__+0x1ba>
 5a2:	8a 2d       	mov	r24, r10
 5a4:	86 78       	andi	r24, 0x86	; 134
 5a6:	59 f0       	breq	.+22     	; 0x5be <__LOCK_REGION_LENGTH__+0x1be>
 5a8:	a1 fe       	sbrs	r10, 1
 5aa:	02 c0       	rjmp	.+4      	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
 5ac:	8b e2       	ldi	r24, 0x2B	; 43
 5ae:	01 c0       	rjmp	.+2      	; 0x5b2 <__LOCK_REGION_LENGTH__+0x1b2>
 5b0:	80 e2       	ldi	r24, 0x20	; 32
 5b2:	a7 fc       	sbrc	r10, 7
 5b4:	8d e2       	ldi	r24, 0x2D	; 45
 5b6:	b6 01       	movw	r22, r12
 5b8:	90 e0       	ldi	r25, 0x00	; 0
 5ba:	0e 94 1d 03 	call	0x63a	; 0x63a <fputc>
 5be:	89 14       	cp	r8, r9
 5c0:	38 f4       	brcc	.+14     	; 0x5d0 <__LOCK_REGION_LENGTH__+0x1d0>
 5c2:	b6 01       	movw	r22, r12
 5c4:	80 e3       	ldi	r24, 0x30	; 48
 5c6:	90 e0       	ldi	r25, 0x00	; 0
 5c8:	0e 94 1d 03 	call	0x63a	; 0x63a <fputc>
 5cc:	9a 94       	dec	r9
 5ce:	f7 cf       	rjmp	.-18     	; 0x5be <__LOCK_REGION_LENGTH__+0x1be>
 5d0:	8a 94       	dec	r8
 5d2:	f3 01       	movw	r30, r6
 5d4:	e8 0d       	add	r30, r8
 5d6:	f1 1d       	adc	r31, r1
 5d8:	80 81       	ld	r24, Z
 5da:	b6 01       	movw	r22, r12
 5dc:	90 e0       	ldi	r25, 0x00	; 0
 5de:	0e 94 1d 03 	call	0x63a	; 0x63a <fputc>
 5e2:	81 10       	cpse	r8, r1
 5e4:	f5 cf       	rjmp	.-22     	; 0x5d0 <__LOCK_REGION_LENGTH__+0x1d0>
 5e6:	22 20       	and	r2, r2
 5e8:	09 f4       	brne	.+2      	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
 5ea:	42 ce       	rjmp	.-892    	; 0x270 <vfprintf+0x24>
 5ec:	b6 01       	movw	r22, r12
 5ee:	80 e2       	ldi	r24, 0x20	; 32
 5f0:	90 e0       	ldi	r25, 0x00	; 0
 5f2:	0e 94 1d 03 	call	0x63a	; 0x63a <fputc>
 5f6:	2a 94       	dec	r2
 5f8:	f6 cf       	rjmp	.-20     	; 0x5e6 <__LOCK_REGION_LENGTH__+0x1e6>
 5fa:	f6 01       	movw	r30, r12
 5fc:	86 81       	ldd	r24, Z+6	; 0x06
 5fe:	97 81       	ldd	r25, Z+7	; 0x07
 600:	02 c0       	rjmp	.+4      	; 0x606 <__LOCK_REGION_LENGTH__+0x206>
 602:	8f ef       	ldi	r24, 0xFF	; 255
 604:	9f ef       	ldi	r25, 0xFF	; 255
 606:	2b 96       	adiw	r28, 0x0b	; 11
 608:	e2 e1       	ldi	r30, 0x12	; 18
 60a:	0c 94 d3 03 	jmp	0x7a6	; 0x7a6 <__epilogue_restores__>

0000060e <strnlen_P>:
 60e:	fc 01       	movw	r30, r24
 610:	05 90       	lpm	r0, Z+
 612:	61 50       	subi	r22, 0x01	; 1
 614:	70 40       	sbci	r23, 0x00	; 0
 616:	01 10       	cpse	r0, r1
 618:	d8 f7       	brcc	.-10     	; 0x610 <strnlen_P+0x2>
 61a:	80 95       	com	r24
 61c:	90 95       	com	r25
 61e:	8e 0f       	add	r24, r30
 620:	9f 1f       	adc	r25, r31
 622:	08 95       	ret

00000624 <strnlen>:
 624:	fc 01       	movw	r30, r24
 626:	61 50       	subi	r22, 0x01	; 1
 628:	70 40       	sbci	r23, 0x00	; 0
 62a:	01 90       	ld	r0, Z+
 62c:	01 10       	cpse	r0, r1
 62e:	d8 f7       	brcc	.-10     	; 0x626 <strnlen+0x2>
 630:	80 95       	com	r24
 632:	90 95       	com	r25
 634:	8e 0f       	add	r24, r30
 636:	9f 1f       	adc	r25, r31
 638:	08 95       	ret

0000063a <fputc>:
 63a:	0f 93       	push	r16
 63c:	1f 93       	push	r17
 63e:	cf 93       	push	r28
 640:	df 93       	push	r29
 642:	fb 01       	movw	r30, r22
 644:	23 81       	ldd	r18, Z+3	; 0x03
 646:	21 fd       	sbrc	r18, 1
 648:	03 c0       	rjmp	.+6      	; 0x650 <fputc+0x16>
 64a:	8f ef       	ldi	r24, 0xFF	; 255
 64c:	9f ef       	ldi	r25, 0xFF	; 255
 64e:	2c c0       	rjmp	.+88     	; 0x6a8 <fputc+0x6e>
 650:	22 ff       	sbrs	r18, 2
 652:	16 c0       	rjmp	.+44     	; 0x680 <fputc+0x46>
 654:	46 81       	ldd	r20, Z+6	; 0x06
 656:	57 81       	ldd	r21, Z+7	; 0x07
 658:	24 81       	ldd	r18, Z+4	; 0x04
 65a:	35 81       	ldd	r19, Z+5	; 0x05
 65c:	42 17       	cp	r20, r18
 65e:	53 07       	cpc	r21, r19
 660:	44 f4       	brge	.+16     	; 0x672 <fputc+0x38>
 662:	a0 81       	ld	r26, Z
 664:	b1 81       	ldd	r27, Z+1	; 0x01
 666:	9d 01       	movw	r18, r26
 668:	2f 5f       	subi	r18, 0xFF	; 255
 66a:	3f 4f       	sbci	r19, 0xFF	; 255
 66c:	31 83       	std	Z+1, r19	; 0x01
 66e:	20 83       	st	Z, r18
 670:	8c 93       	st	X, r24
 672:	26 81       	ldd	r18, Z+6	; 0x06
 674:	37 81       	ldd	r19, Z+7	; 0x07
 676:	2f 5f       	subi	r18, 0xFF	; 255
 678:	3f 4f       	sbci	r19, 0xFF	; 255
 67a:	37 83       	std	Z+7, r19	; 0x07
 67c:	26 83       	std	Z+6, r18	; 0x06
 67e:	14 c0       	rjmp	.+40     	; 0x6a8 <fputc+0x6e>
 680:	8b 01       	movw	r16, r22
 682:	ec 01       	movw	r28, r24
 684:	fb 01       	movw	r30, r22
 686:	00 84       	ldd	r0, Z+8	; 0x08
 688:	f1 85       	ldd	r31, Z+9	; 0x09
 68a:	e0 2d       	mov	r30, r0
 68c:	09 95       	icall
 68e:	89 2b       	or	r24, r25
 690:	e1 f6       	brne	.-72     	; 0x64a <fputc+0x10>
 692:	d8 01       	movw	r26, r16
 694:	16 96       	adiw	r26, 0x06	; 6
 696:	8d 91       	ld	r24, X+
 698:	9c 91       	ld	r25, X
 69a:	17 97       	sbiw	r26, 0x07	; 7
 69c:	01 96       	adiw	r24, 0x01	; 1
 69e:	17 96       	adiw	r26, 0x07	; 7
 6a0:	9c 93       	st	X, r25
 6a2:	8e 93       	st	-X, r24
 6a4:	16 97       	sbiw	r26, 0x06	; 6
 6a6:	ce 01       	movw	r24, r28
 6a8:	df 91       	pop	r29
 6aa:	cf 91       	pop	r28
 6ac:	1f 91       	pop	r17
 6ae:	0f 91       	pop	r16
 6b0:	08 95       	ret

000006b2 <__ultoa_invert>:
 6b2:	fa 01       	movw	r30, r20
 6b4:	aa 27       	eor	r26, r26
 6b6:	28 30       	cpi	r18, 0x08	; 8
 6b8:	51 f1       	breq	.+84     	; 0x70e <__ultoa_invert+0x5c>
 6ba:	20 31       	cpi	r18, 0x10	; 16
 6bc:	81 f1       	breq	.+96     	; 0x71e <__ultoa_invert+0x6c>
 6be:	e8 94       	clt
 6c0:	6f 93       	push	r22
 6c2:	6e 7f       	andi	r22, 0xFE	; 254
 6c4:	6e 5f       	subi	r22, 0xFE	; 254
 6c6:	7f 4f       	sbci	r23, 0xFF	; 255
 6c8:	8f 4f       	sbci	r24, 0xFF	; 255
 6ca:	9f 4f       	sbci	r25, 0xFF	; 255
 6cc:	af 4f       	sbci	r26, 0xFF	; 255
 6ce:	b1 e0       	ldi	r27, 0x01	; 1
 6d0:	3e d0       	rcall	.+124    	; 0x74e <__ultoa_invert+0x9c>
 6d2:	b4 e0       	ldi	r27, 0x04	; 4
 6d4:	3c d0       	rcall	.+120    	; 0x74e <__ultoa_invert+0x9c>
 6d6:	67 0f       	add	r22, r23
 6d8:	78 1f       	adc	r23, r24
 6da:	89 1f       	adc	r24, r25
 6dc:	9a 1f       	adc	r25, r26
 6de:	a1 1d       	adc	r26, r1
 6e0:	68 0f       	add	r22, r24
 6e2:	79 1f       	adc	r23, r25
 6e4:	8a 1f       	adc	r24, r26
 6e6:	91 1d       	adc	r25, r1
 6e8:	a1 1d       	adc	r26, r1
 6ea:	6a 0f       	add	r22, r26
 6ec:	71 1d       	adc	r23, r1
 6ee:	81 1d       	adc	r24, r1
 6f0:	91 1d       	adc	r25, r1
 6f2:	a1 1d       	adc	r26, r1
 6f4:	20 d0       	rcall	.+64     	; 0x736 <__ultoa_invert+0x84>
 6f6:	09 f4       	brne	.+2      	; 0x6fa <__ultoa_invert+0x48>
 6f8:	68 94       	set
 6fa:	3f 91       	pop	r19
 6fc:	2a e0       	ldi	r18, 0x0A	; 10
 6fe:	26 9f       	mul	r18, r22
 700:	11 24       	eor	r1, r1
 702:	30 19       	sub	r19, r0
 704:	30 5d       	subi	r19, 0xD0	; 208
 706:	31 93       	st	Z+, r19
 708:	de f6       	brtc	.-74     	; 0x6c0 <__ultoa_invert+0xe>
 70a:	cf 01       	movw	r24, r30
 70c:	08 95       	ret
 70e:	46 2f       	mov	r20, r22
 710:	47 70       	andi	r20, 0x07	; 7
 712:	40 5d       	subi	r20, 0xD0	; 208
 714:	41 93       	st	Z+, r20
 716:	b3 e0       	ldi	r27, 0x03	; 3
 718:	0f d0       	rcall	.+30     	; 0x738 <__ultoa_invert+0x86>
 71a:	c9 f7       	brne	.-14     	; 0x70e <__ultoa_invert+0x5c>
 71c:	f6 cf       	rjmp	.-20     	; 0x70a <__ultoa_invert+0x58>
 71e:	46 2f       	mov	r20, r22
 720:	4f 70       	andi	r20, 0x0F	; 15
 722:	40 5d       	subi	r20, 0xD0	; 208
 724:	4a 33       	cpi	r20, 0x3A	; 58
 726:	18 f0       	brcs	.+6      	; 0x72e <__ultoa_invert+0x7c>
 728:	49 5d       	subi	r20, 0xD9	; 217
 72a:	31 fd       	sbrc	r19, 1
 72c:	40 52       	subi	r20, 0x20	; 32
 72e:	41 93       	st	Z+, r20
 730:	02 d0       	rcall	.+4      	; 0x736 <__ultoa_invert+0x84>
 732:	a9 f7       	brne	.-22     	; 0x71e <__ultoa_invert+0x6c>
 734:	ea cf       	rjmp	.-44     	; 0x70a <__ultoa_invert+0x58>
 736:	b4 e0       	ldi	r27, 0x04	; 4
 738:	a6 95       	lsr	r26
 73a:	97 95       	ror	r25
 73c:	87 95       	ror	r24
 73e:	77 95       	ror	r23
 740:	67 95       	ror	r22
 742:	ba 95       	dec	r27
 744:	c9 f7       	brne	.-14     	; 0x738 <__ultoa_invert+0x86>
 746:	00 97       	sbiw	r24, 0x00	; 0
 748:	61 05       	cpc	r22, r1
 74a:	71 05       	cpc	r23, r1
 74c:	08 95       	ret
 74e:	9b 01       	movw	r18, r22
 750:	ac 01       	movw	r20, r24
 752:	0a 2e       	mov	r0, r26
 754:	06 94       	lsr	r0
 756:	57 95       	ror	r21
 758:	47 95       	ror	r20
 75a:	37 95       	ror	r19
 75c:	27 95       	ror	r18
 75e:	ba 95       	dec	r27
 760:	c9 f7       	brne	.-14     	; 0x754 <__ultoa_invert+0xa2>
 762:	62 0f       	add	r22, r18
 764:	73 1f       	adc	r23, r19
 766:	84 1f       	adc	r24, r20
 768:	95 1f       	adc	r25, r21
 76a:	a0 1d       	adc	r26, r0
 76c:	08 95       	ret

0000076e <__prologue_saves__>:
 76e:	2f 92       	push	r2
 770:	3f 92       	push	r3
 772:	4f 92       	push	r4
 774:	5f 92       	push	r5
 776:	6f 92       	push	r6
 778:	7f 92       	push	r7
 77a:	8f 92       	push	r8
 77c:	9f 92       	push	r9
 77e:	af 92       	push	r10
 780:	bf 92       	push	r11
 782:	cf 92       	push	r12
 784:	df 92       	push	r13
 786:	ef 92       	push	r14
 788:	ff 92       	push	r15
 78a:	0f 93       	push	r16
 78c:	1f 93       	push	r17
 78e:	cf 93       	push	r28
 790:	df 93       	push	r29
 792:	cd b7       	in	r28, 0x3d	; 61
 794:	de b7       	in	r29, 0x3e	; 62
 796:	ca 1b       	sub	r28, r26
 798:	db 0b       	sbc	r29, r27
 79a:	0f b6       	in	r0, 0x3f	; 63
 79c:	f8 94       	cli
 79e:	de bf       	out	0x3e, r29	; 62
 7a0:	0f be       	out	0x3f, r0	; 63
 7a2:	cd bf       	out	0x3d, r28	; 61
 7a4:	09 94       	ijmp

000007a6 <__epilogue_restores__>:
 7a6:	2a 88       	ldd	r2, Y+18	; 0x12
 7a8:	39 88       	ldd	r3, Y+17	; 0x11
 7aa:	48 88       	ldd	r4, Y+16	; 0x10
 7ac:	5f 84       	ldd	r5, Y+15	; 0x0f
 7ae:	6e 84       	ldd	r6, Y+14	; 0x0e
 7b0:	7d 84       	ldd	r7, Y+13	; 0x0d
 7b2:	8c 84       	ldd	r8, Y+12	; 0x0c
 7b4:	9b 84       	ldd	r9, Y+11	; 0x0b
 7b6:	aa 84       	ldd	r10, Y+10	; 0x0a
 7b8:	b9 84       	ldd	r11, Y+9	; 0x09
 7ba:	c8 84       	ldd	r12, Y+8	; 0x08
 7bc:	df 80       	ldd	r13, Y+7	; 0x07
 7be:	ee 80       	ldd	r14, Y+6	; 0x06
 7c0:	fd 80       	ldd	r15, Y+5	; 0x05
 7c2:	0c 81       	ldd	r16, Y+4	; 0x04
 7c4:	1b 81       	ldd	r17, Y+3	; 0x03
 7c6:	aa 81       	ldd	r26, Y+2	; 0x02
 7c8:	b9 81       	ldd	r27, Y+1	; 0x01
 7ca:	ce 0f       	add	r28, r30
 7cc:	d1 1d       	adc	r29, r1
 7ce:	0f b6       	in	r0, 0x3f	; 63
 7d0:	f8 94       	cli
 7d2:	de bf       	out	0x3e, r29	; 62
 7d4:	0f be       	out	0x3f, r0	; 63
 7d6:	cd bf       	out	0x3d, r28	; 61
 7d8:	ed 01       	movw	r28, r26
 7da:	08 95       	ret

000007dc <_exit>:
 7dc:	f8 94       	cli

000007de <__stop_program>:
 7de:	ff cf       	rjmp	.-2      	; 0x7de <__stop_program>
